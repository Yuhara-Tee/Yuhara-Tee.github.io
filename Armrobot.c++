#include <Servo.h>
#include <Arduino.h>

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡∏Å‡∏ï‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß
Servo servoBase, servoShoulder, servoElbow, servoWristRot, servoWristBend, servoGripper;

// üïπÔ∏è ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤ Joystick
#define JOY1_X A0  // ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Base
#define JOY1_Y A1  // ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Shoulder
#define JOY2_X A2  // ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Elbow
#define JOY2_Y A3  // ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Wrist Rotate
#define JOY3_X A4  // ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Wrist Bend

// üõ†Ô∏è ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Gripper
#define BUTTON_OPEN 2     // ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î Gripper
#define BUTTON_CLOSE 4    // ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î Gripper

// ‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏≠‡∏á‡∏®‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß
#define MIN_ANGLE 0
#define MAX_ANGLE 180

// Deadzone ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≠‡∏¢‡∏™‡∏ï‡∏¥‡πä‡∏Å
#define DEADZONE 80

// üìù ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß
int posBase = 90, posShoulder = 90, posElbow = 90, posWristRot = 90, posWristBend = 90, posGripper = 90;

// üåÄ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡∏™‡∏°‡∏π‡∏ó
void smoothMove(Servo &servo, int &currentPos, int targetPos, int speedDelay) {
    if (currentPos != targetPos) {
        int step = (targetPos > currentPos) ? 1 : -1;
        currentPos += step;
        servo.write(currentPos); 
        delay(speedDelay);  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà (‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å = ‡∏ä‡πâ‡∏≤‡∏•‡∏á)
    }
}

void setup() {
    servoBase.attach(5);
    servoShoulder.attach(3);
    servoElbow.attach(6);
    servoWristRot.attach(9);
    servoWristBend.attach(10);
    servoGripper.attach(11);

    pinMode(BUTTON_OPEN, INPUT_PULLUP);   // ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î (‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö GND)
    pinMode(BUTTON_CLOSE, INPUT_PULLUP);  // ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î (‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö GND)

    servoGripper.write(posGripper);  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Gripper
}

void loop() {
    // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Joystick
    int joy1X = analogRead(JOY1_X);
    int joy1Y = analogRead(JOY1_Y);
    int joy2X = analogRead(JOY2_X);
    int joy2Y = analogRead(JOY2_Y);  // ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Wrist Rotate
    int joy3X = analogRead(JOY3_X);

    // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà (‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å = ‡∏ä‡πâ‡∏≤‡∏•‡∏á)
    int speedBase = map(abs(joy1X - 512), 0, 512, 20, 5);
    int speedShoulder = map(abs(joy1Y - 512), 0, 512, 20, 5);
    int speedElbow = map(abs(joy2X - 512), 0, 512, 20, 5);
    int speedWristRot = map(abs(joy2Y - 512), 0, 512, 30, 10);  // ‚úÖ ‡∏ä‡πâ‡∏≤‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©
    int speedWristBend = map(abs(joy3X - 512), 0, 512, 20, 5);

    // üéÆ ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Base
    if (abs(joy1X - 512) > DEADZONE) {
        int target = (joy1X > 512) ? posBase + 2 : posBase - 2;
        smoothMove(servoBase, posBase, constrain(target, MIN_ANGLE, MAX_ANGLE), speedBase);
    }

    // üéÆ ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Shoulder
    if (abs(joy1Y - 512) > DEADZONE) {
        int target = (joy1Y > 512) ? posShoulder + 2 : posShoulder - 2;
        smoothMove(servoShoulder, posShoulder, constrain(target, MIN_ANGLE, MAX_ANGLE), speedShoulder);
    }

    // üéÆ ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Elbow
    if (abs(joy2X - 512) > DEADZONE) {
        int target = (joy2X > 512) ? posElbow + 2 : posElbow - 2;
        smoothMove(servoElbow, posElbow, constrain(target, MIN_ANGLE, MAX_ANGLE), speedElbow);
    }

    // üéÆ ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Wrist Rotate
    if (abs(joy2Y - 512) > DEADZONE) {
        int target = (joy2Y > 512) ? posWristRot + 1 : posWristRot - 1;  // step 1 ‡∏ä‡πâ‡∏≤‡∏•‡∏á
        smoothMove(servoWristRot, posWristRot, constrain(target, MIN_ANGLE, MAX_ANGLE), speedWristRot);
    }

    // üéÆ ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Wrist Bend
    if (abs(joy3X - 512) > DEADZONE) {
        int target = (joy3X > 512) ? posWristBend + 2 : posWristBend - 2;
        smoothMove(servoWristBend, posWristBend, constrain(target, MIN_ANGLE, MAX_ANGLE), speedWristBend);
    }

    // üõ†Ô∏è ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Gripper ‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î
    if (digitalRead(BUTTON_OPEN) == LOW) {
        posGripper = constrain(posGripper + 90, MIN_ANGLE, MAX_ANGLE);  // ‡πÄ‡∏õ‡∏¥‡∏î +90¬∞
        servoGripper.write(posGripper); 
        delay(300);  // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡πÄ‡∏£‡πá‡∏ß
        while (digitalRead(BUTTON_OPEN) == LOW);  // ‡∏£‡∏≠‡∏à‡∏ô‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏õ‡∏∏‡πà‡∏°
    }

    if (digitalRead(BUTTON_CLOSE) == LOW) {
        posGripper = constrain(posGripper - 90, MIN_ANGLE, MAX_ANGLE);  // ‡∏õ‡∏¥‡∏î -90¬∞
        servoGripper.write(posGripper); 
        delay(300);  // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡πÄ‡∏£‡πá‡∏ß
        while (digitalRead(BUTTON_CLOSE) == LOW);  // ‡∏£‡∏≠‡∏à‡∏ô‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏õ‡∏∏‡πà‡∏°
    }

    delay(15);  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏π‡∏ó
}
